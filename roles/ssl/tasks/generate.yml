- name: "Create SSL directory structure"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ ssl.root_dir }}"
    - "{{ ssl.etcd_dir }}"
    - "{{ ssl.patroni_dir }}"
    - "{{ ssl.haproxy_dir }}"

- name: "Generate CA private key"
  community.crypto.openssl_privatekey:
    path: "{{ ssl.ca.privatekey_path }}"

- name: "Generate CA CSR"
  community.crypto.openssl_csr:
    path: "{{ ssl.ca.csr_path }}"
    privatekey_path: "{{ ssl.ca.privatekey_path }}"
    country_name: "{{ ssl.subject.country_name }}"
    state_or_province_name: "{{ ssl.subject.state_or_province_name }}"
    locality_name: "{{ ssl.subject.locality_name }}"
    organization_name: "{{ ssl.subject.organization_name }}"
    organizational_unit_name: "{{ ssl.subject.organizational_unit_name }}"
    common_name: "{{ ssl.ca.common_name }}"
    basic_constraints:
      - CA:TRUE
      - pathlen:1
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
      - digitalSignature

- name: "Generate CA certificate"
  community.crypto.x509_certificate:
    path: "{{ ssl.ca.cert_path }}"
    privatekey_path: "{{ ssl.ca.privatekey_path }}"
    csr_path: "{{ ssl.ca.csr_path }}"
    provider: selfsigned

# =================== etcd ===================
- name: "Generate etcd private keys"
  community.crypto.openssl_privatekey:
    path: "{{ ssl.etcd_dir }}/{{ item }}.pem"
  loop: "{{ groups['etcd'] }}"

- name: "Generate etcd CSRs"
  community.crypto.openssl_csr:
    path: "{{ ssl.etcd_dir }}/{{ item }}.csr"
    privatekey_path: "{{ ssl.etcd_dir }}/{{ item }}.pem"
    country_name: "{{ ssl.subject.country_name }}"
    state_or_province_name: "{{ ssl.subject.state_or_province_name }}"
    locality_name: "{{ ssl.subject.locality_name }}"
    organization_name: "{{ ssl.subject.organization_name }}"
    organizational_unit_name: "{{ ssl.subject.organizational_unit_name }}"
    common_name: "{{ item }}"
    key_usage:
      - digitalSignature
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name:
      - DNS:{{ item }}
      - IP:{{ hostvars[item]['ansible_host'] }}
      - IP:127.0.0.1
  loop: "{{ groups['etcd'] }}"

- name: "Generate etcd certificates"
  community.crypto.x509_certificate:
    path: "{{ ssl.etcd_dir }}/{{ item }}.crt"
    privatekey_path: "{{ ssl.etcd_dir }}/{{ item }}.pem"
    csr_path: "{{ ssl.etcd_dir }}/{{ item }}.csr"
    ownca_path: "{{ ssl.ca.cert_path }}"
    ownca_privatekey_path: "{{ ssl.ca.privatekey_path }}"
    provider: ownca
  loop: "{{ groups['etcd'] }}"

# =================== patroni ===================
- name: "Generate patroni private keys"
  community.crypto.openssl_privatekey:
    path: "{{ ssl.patroni_dir }}/{{ item }}.pem"
  loop: "{{ groups['patroni'] }}"

- name: "Generate patroni CSRs"
  community.crypto.openssl_csr:
    path: "{{ ssl.patroni_dir }}/{{ item }}.csr"
    privatekey_path: "{{ ssl.patroni_dir }}/{{ item }}.pem"
    country_name: "{{ ssl.subject.country_name }}"
    state_or_province_name: "{{ ssl.subject.state_or_province_name }}"
    locality_name: "{{ ssl.subject.locality_name }}"
    organization_name: "{{ ssl.subject.organization_name }}"
    organizational_unit_name: "{{ ssl.subject.organizational_unit_name }}"
    common_name: "{{ item }}"
    key_usage:
      - digitalSignature
    extended_key_usage:
      - serverAuth
      - clientAuth
    subject_alt_name:
      - DNS:{{ item }}
      - IP:{{ hostvars[item]['ansible_host'] }}
      - IP:127.0.0.1
  loop: "{{ groups['patroni'] }}"

- name: "Generate patroni certificates"
  community.crypto.x509_certificate:
    path: "{{ ssl.patroni_dir }}/{{ item }}.crt"
    privatekey_path: "{{ ssl.patroni_dir }}/{{ item }}.pem"
    csr_path: "{{ ssl.patroni_dir }}/{{ item }}.csr"
    ownca_path: "{{ ssl.ca.cert_path }}"
    ownca_privatekey_path: "{{ ssl.ca.privatekey_path }}"
    provider: ownca
  loop: "{{ groups['patroni'] }}"

# =================== haproxy ===================
- name: "Generate haproxy private key"
  community.crypto.openssl_privatekey:
    path: "{{ ssl.haproxy_dir }}/haproxy.pem"

- name: "Generate haproxy CSR"
  community.crypto.openssl_csr:
    path: "{{ ssl.haproxy_dir }}/haproxy.csr"
    privatekey_path: "{{ ssl.haproxy_dir }}/haproxy.pem"
    country_name: "{{ ssl.subject.country_name }}"
    state_or_province_name: "{{ ssl.subject.state_or_province_name }}"
    locality_name: "{{ ssl.subject.locality_name }}"
    organization_name: "{{ ssl.subject.organization_name }}"
    organizational_unit_name: "{{ ssl.subject.organizational_unit_name }}"
    common_name: "haproxy"
    key_usage:
      - digitalSignature
    extended_key_usage:
      - serverAuth
    subject_alt_name:
      - DNS:haproxy
      - IP:127.0.0.1

- name: "Generate haproxy certificate"
  community.crypto.x509_certificate:
    path: "{{ ssl.haproxy_dir }}/haproxy.crt"
    privatekey_path: "{{ ssl.haproxy_dir }}/haproxy.pem"
    csr_path: "{{ ssl.haproxy_dir }}/haproxy.csr"
    ownca_path: "{{ ssl.ca.cert_path }}"
    ownca_privatekey_path: "{{ ssl.ca.privatekey_path }}"
    provider: ownca
